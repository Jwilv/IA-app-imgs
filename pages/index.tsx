
import { Loader, Card, FormField } from '@/components'
import { ChangeEvent, useEffect, useState } from 'react'

interface PropsRenderCards {
  data: any
  title: string
}

const RenderCards = ({ data, title }: PropsRenderCards) => {

  if (data?.length > 0) {
    return data.map((post: any) => <Card key={post._id} {...post} />)
  }

  return (
    <h2 className='mt-5 font-bold text-[#6469ff] text-xl uppercase'>
      {title}
    </h2>
  )
}

interface Items {
  name: string
  prompt: string
  photo: string
}

export default function Home() {

  const [loading, setLoading] = useState(false);
  const [allPosts, setAllPosts] = useState<null | Items[]>(null);
  const [seacrhText, setSeacrhText] = useState('');
  const [searchResults, setSearchResults] = useState<Items[] | null>();
  const [searchTimeout, setSearchTimeout] = useState<any>(null);


  const refreshPost = async () => {
    setLoading(true);
    try {
      const response: any = await fetch('http://localhost:5050/api/v1/post', {
        headers: {
          'Content-Type': 'application/json'
        }
      });

      if (response.ok) {
        const result = await response.json();
        setAllPosts(result.data.reverse());
      }

    } catch (error) {
      alert(error);
    } finally {
      setLoading(false);
    }
  }

  useEffect(() => {
    refreshPost();
  }, [])

  const handleSearchChange = (e: ChangeEvent<HTMLInputElement>) => {
    clearTimeout(searchTimeout);
    setSeacrhText(e.target.value);

    setSearchTimeout(
      setTimeout(() => {
        const filterResults = allPosts?.filter((item) =>
          item.prompt.toLowerCase().includes(seacrhText.toLowerCase())
          || item.name.toLowerCase().includes(seacrhText.toLowerCase())
        )

        setSearchResults(filterResults);
      }, 500)
    )


  }
  return (
    <section className='max-w-7xl mx-auto'>
      <div>
        <h1 className='font-extrabold text-[#222328] text-[32px]'>the community Show case</h1>
        <p className='mt-2 text-[#666e75] text-[16px] max-w[500px]'>
          Browse through a collection of imaginative and visually stunning images generated by DALL-E AI
        </p>
      </div>

      <div className='mt-16'>
        <FormField
          handleChange={handleSearchChange}
          placeholder='search pohto'
          name='search'
          value={seacrhText}
          labelName='Search'
          type='text'
        />
      </div>

      <div className='mt-10'>
        {
          loading ? (
            <div className='flex justify-center items-center'>
              <Loader />
            </div>
          ) : (
            <>
              {
                seacrhText &&
                <h2 className='font-medium text-[#666e75] text-xl mb-3'>
                  Showing results for <span className='text-[#222328]'>{seacrhText}</span>
                </h2>
              }
              <div className='grid lg:grid-cols-4 sm:grid-cols-3 xs:grid-cols-2 grid-cols-1 gap-3'>
                {
                  seacrhText ? (
                    <RenderCards data={searchResults} title='No search results found' />
                  )
                    : (
                      <RenderCards data={allPosts} title='No posts found' />
                    )
                }
              </div>
            </>
          )
        }
      </div>
    </section>
  )
}
